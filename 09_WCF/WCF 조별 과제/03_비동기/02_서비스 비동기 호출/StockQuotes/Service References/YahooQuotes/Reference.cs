//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18034
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockQuotes.YahooQuotes {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockQuote", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class StockQuote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOfTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastTradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentageChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviousCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeOfTradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Change {
            get {
                return this.ChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeField, value) != true)) {
                    this.ChangeField = value;
                    this.RaisePropertyChanged("Change");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOfTrade {
            get {
                return this.DateOfTradeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfTradeField, value) != true)) {
                    this.DateOfTradeField = value;
                    this.RaisePropertyChanged("DateOfTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysRange {
            get {
                return this.DaysRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysRangeField, value) != true)) {
                    this.DaysRangeField = value;
                    this.RaisePropertyChanged("DaysRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastTradePrice {
            get {
                return this.LastTradePriceField;
            }
            set {
                if ((object.ReferenceEquals(this.LastTradePriceField, value) != true)) {
                    this.LastTradePriceField = value;
                    this.RaisePropertyChanged("LastTradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Open {
            get {
                return this.OpenField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenField, value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentageChange {
            get {
                return this.PercentageChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentageChangeField, value) != true)) {
                    this.PercentageChangeField = value;
                    this.RaisePropertyChanged("PercentageChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviousClose {
            get {
                return this.PreviousCloseField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousCloseField, value) != true)) {
                    this.PreviousCloseField = value;
                    this.RaisePropertyChanged("PreviousClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeOfTrade {
            get {
                return this.TimeOfTradeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeOfTradeField, value) != true)) {
                    this.TimeOfTradeField = value;
                    this.RaisePropertyChanged("TimeOfTrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeField, value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="YahooQuotes.IYahooQuotes")]
    public interface IYahooQuotes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IYahooQuotes/TestService", ReplyAction="http://tempuri.org/IYahooQuotes/TestServiceResponse")]
        string TestService(int intParam);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYahooQuotes/TestService", ReplyAction="http://tempuri.org/IYahooQuotes/TestServiceResponse")]
        System.IAsyncResult BeginTestService(int intParam, System.AsyncCallback callback, object asyncState);
        
        string EndTestService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IYahooQuotes/GetQuoteForStockSymbol", ReplyAction="http://tempuri.org/IYahooQuotes/GetQuoteForStockSymbolResponse")]
        StockQuotes.YahooQuotes.StockQuote GetQuoteForStockSymbol(string aSymbol);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYahooQuotes/GetQuoteForStockSymbol", ReplyAction="http://tempuri.org/IYahooQuotes/GetQuoteForStockSymbolResponse")]
        System.IAsyncResult BeginGetQuoteForStockSymbol(string aSymbol, System.AsyncCallback callback, object asyncState);
        
        StockQuotes.YahooQuotes.StockQuote EndGetQuoteForStockSymbol(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IYahooQuotesChannel : StockQuotes.YahooQuotes.IYahooQuotes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQuoteForStockSymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQuoteForStockSymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public StockQuotes.YahooQuotes.StockQuote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((StockQuotes.YahooQuotes.StockQuote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YahooQuotesClient : System.ServiceModel.ClientBase<StockQuotes.YahooQuotes.IYahooQuotes>, StockQuotes.YahooQuotes.IYahooQuotes {
        
        private BeginOperationDelegate onBeginTestServiceDelegate;
        
        private EndOperationDelegate onEndTestServiceDelegate;
        
        private System.Threading.SendOrPostCallback onTestServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQuoteForStockSymbolDelegate;
        
        private EndOperationDelegate onEndGetQuoteForStockSymbolDelegate;
        
        private System.Threading.SendOrPostCallback onGetQuoteForStockSymbolCompletedDelegate;
        
        public YahooQuotesClient() {
        }
        
        public YahooQuotesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public YahooQuotesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YahooQuotesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YahooQuotesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<TestServiceCompletedEventArgs> TestServiceCompleted;
        
        public event System.EventHandler<GetQuoteForStockSymbolCompletedEventArgs> GetQuoteForStockSymbolCompleted;
        
        public string TestService(int intParam) {
            return base.Channel.TestService(intParam);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestService(int intParam, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestService(intParam, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTestService(System.IAsyncResult result) {
            return base.Channel.EndTestService(result);
        }
        
        private System.IAsyncResult OnBeginTestService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intParam = ((int)(inValues[0]));
            return this.BeginTestService(intParam, callback, asyncState);
        }
        
        private object[] OnEndTestService(System.IAsyncResult result) {
            string retVal = this.EndTestService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestServiceCompleted(object state) {
            if ((this.TestServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestServiceCompleted(this, new TestServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestServiceAsync(int intParam) {
            this.TestServiceAsync(intParam, null);
        }
        
        public void TestServiceAsync(int intParam, object userState) {
            if ((this.onBeginTestServiceDelegate == null)) {
                this.onBeginTestServiceDelegate = new BeginOperationDelegate(this.OnBeginTestService);
            }
            if ((this.onEndTestServiceDelegate == null)) {
                this.onEndTestServiceDelegate = new EndOperationDelegate(this.OnEndTestService);
            }
            if ((this.onTestServiceCompletedDelegate == null)) {
                this.onTestServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestServiceCompleted);
            }
            base.InvokeAsync(this.onBeginTestServiceDelegate, new object[] {
                        intParam}, this.onEndTestServiceDelegate, this.onTestServiceCompletedDelegate, userState);
        }
        
        public StockQuotes.YahooQuotes.StockQuote GetQuoteForStockSymbol(string aSymbol) {
            return base.Channel.GetQuoteForStockSymbol(aSymbol);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetQuoteForStockSymbol(string aSymbol, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuoteForStockSymbol(aSymbol, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public StockQuotes.YahooQuotes.StockQuote EndGetQuoteForStockSymbol(System.IAsyncResult result) {
            return base.Channel.EndGetQuoteForStockSymbol(result);
        }
        
        private System.IAsyncResult OnBeginGetQuoteForStockSymbol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string aSymbol = ((string)(inValues[0]));
            return this.BeginGetQuoteForStockSymbol(aSymbol, callback, asyncState);
        }
        
        private object[] OnEndGetQuoteForStockSymbol(System.IAsyncResult result) {
            StockQuotes.YahooQuotes.StockQuote retVal = this.EndGetQuoteForStockSymbol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQuoteForStockSymbolCompleted(object state) {
            if ((this.GetQuoteForStockSymbolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQuoteForStockSymbolCompleted(this, new GetQuoteForStockSymbolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQuoteForStockSymbolAsync(string aSymbol) {
            this.GetQuoteForStockSymbolAsync(aSymbol, null);
        }
        
        public void GetQuoteForStockSymbolAsync(string aSymbol, object userState) {
            if ((this.onBeginGetQuoteForStockSymbolDelegate == null)) {
                this.onBeginGetQuoteForStockSymbolDelegate = new BeginOperationDelegate(this.OnBeginGetQuoteForStockSymbol);
            }
            if ((this.onEndGetQuoteForStockSymbolDelegate == null)) {
                this.onEndGetQuoteForStockSymbolDelegate = new EndOperationDelegate(this.OnEndGetQuoteForStockSymbol);
            }
            if ((this.onGetQuoteForStockSymbolCompletedDelegate == null)) {
                this.onGetQuoteForStockSymbolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuoteForStockSymbolCompleted);
            }
            base.InvokeAsync(this.onBeginGetQuoteForStockSymbolDelegate, new object[] {
                        aSymbol}, this.onEndGetQuoteForStockSymbolDelegate, this.onGetQuoteForStockSymbolCompletedDelegate, userState);
        }
    }
}
