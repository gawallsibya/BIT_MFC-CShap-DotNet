//-----------------------------------------------------------
// 03. 마스터페이지 기본 개념
//------------------------------------------------------------


[ 마스터페이지(master page ]

- 웹 사이트에서 공통적으로 사용되는 상단 영역, 좌측영역, 탐색 경로 영역 및 하단 영역등을
  정의하고, 공통 영역들이 위치할 틀(레이아웃)을 지정하는 역할

- 공통 영역에 해당하는 코드를 각 페이지마다 중복 작성할 필요가 없다.


[ 마스터페이지 사용하기 ]



1) 기본적인 마스터 페이지

  1. 새 항목 추가 대화상자
     템플릿 : 마스터페이지 
     이름 : MasterPage1.master로 설정
     언어 : C#
     <추가> 버튼 클릭

  2. 생성된 마스터페이지를 솔루션 탐색기에서 확인할 것 

  3. 생성된 마스터 페이지를 사용하는 콘텐츠 페이지(aspx)를 
     새 항목 추가 대화상자에서 생성

     템플릿 : Web Form
     이  름 : Ex01.aspx
     언  어 : C#
     마스터페이지 선택 옵션 체크

  4. 또 다른 페이지 추가 

     템플릿 : Web Form
     이  름 : Ex01_1.aspx
     언  어 : C#
     마스터페이지 선택 옵션 체크


   *) ContentPlaceHolder컨트롤 : 콘텐츠 페이지를 마스터 페이지와 결합하는 역할 수행
      콘텐츠 페이지에 정의된 콘텐츠는 ContentPlaceHolder컨트롤의 위치에 랜더링 됨

    예제 확인



2) 마스터페이지에서 기본 콘텐츠 정의하기

-  ContentPlaceHolder 에 기본 콘텐츠를 정의하고 여기에 Content 컨트롤을 바인딩
   시키지 않으면 ContentPlaceHolder 컨트롤의 기본 콘텐츠가 그대로 랜더링 됨

   - 마스터 페이지 추가 : MasterPage2.master
   - aspx 2개 추가 	: 02.aspx,   02_1.aspx

   예제 확인)



03) 마스터페이지와 콘텐츠 페이지의 실행 순서

- 마스터 페이지도 .aspx 페이지와 마찬가지로 이벤트를 가지고 있다.

- 마스터 페이지와 콘텐츠 페이지가 결합되어 동작할 때 이벤트 실행순서를
  이해하는 것 중요함

- 콘텐츠 페이지의  Load이벤트 
   ==> 마스터 페이지의 Load() 이벤트

   *) 페이지 로드시 마스터페이지의 Load이벤트에서 초기화된 정보를
      콘텐츠 페이지에서 접근하려면 콘텐츠 페이지의 load이벤트가 아닌
      콘텐츠 페이지의 LoadComplete 또는 PreRender이벤트 등에서 
      접근해야 함

   예제 확인)



04) 콘텐츠 페이지에서 마스터 페이지로 접근하기

- 페이지 로드시 마스터 페이지에서 초기화된 서버 컨트롤을
  콘텐츠 페이지에서 참조하고,

- 콘텐츠 페이지의 Button 클릭 시 다시 마스터 페이지에 있는
  서버 컨트롤을 참조하는 예제 확인)




05) 중첩 마스터 페이지 예제

- 예제 확인)




















































































   

  


















































