/*******************************************************************

  Interface

    - Interface와 구현의 분리 
*******************************************************************/

/*

DLL에서의 인터페이스 : DLL에 의해서 노출되는 함수 

C++에서의 인터페이스 : 해당 클래스 맴버의 집합

COM에서의 인터페이스 : 구현기능을 사용할 수 있는 부분
                       함수 포인터의 배열을 가지고 있는 특정 메모리 
					   구조체 

  - C++에서는 추상 베이스 클래스를 사용하여 COM인터페이스를 구현한다.


//-------------------------------------------------------------------
  인터페이스는 모든 것이다. 
/--------------------------------------------------------------------

  클라이언트에게 컴포넌트는 인터페이스 집합이다.
  - 클라이언트는 오직 인터페이스 만을 통해서 COM 컴포넌트와 통신한다.

  인터페이스는 캡슐화를 제공한다.
	- 도킹 장비만이 노출되어 있고 그 외는 알 수 없다.
	  그 결과 아래와 같은 이점을 제공한다.

   1) 인터페이스는 시스템이 어떠한 변경에 의해서 영향을 받지 않도록 한다. 
    - 우주선과 우주 정거장은 개별적으로 변경될 수 있고,
	  변경되었다고 해서 서로간의 도킹 방법이 변경되지는 않는다.
	
    2) 인터페이스는 클라이언트가 같은 방법으로 다른 컴포넌트를 처리할 수 있도록 한다.
    --> 다형성 
	- 우주 정거장은 서로 다른 우주선이 도킹할 수 있다.

                     
*/